#!/bin/bash

# choose possibles from saved ARandR configurations

# I use ARandR. When you set a screen layout, ARandR lets you save it (by
# default into ~/.screenlayout/). I move my laptop often, not all of the screen
# layouts are applicable everywhere. This is why piping the list of those ARandR
# scripts into dmenu caused clutter. This script filters out the screen layouts
# that require a monitor that is not connected.

# Directory containing scripts saved by ARandR.
ARANDR_DIR="$HOME/.screenlayout"

# Pattern to match against file names of screen layout changing scripts
# generated by ARandR.
PATTERN='*.sh'

cd $ARANDR_DIR # ~/.screenlayout by default

# This will contain the full absolute path to the user selected script.
SELECTED_SCRIPT="$(
    for SCRIPT in `ls $PATTERN`; do
        # If --dryrun of the first xrandr command succeeds, script becomes a
        # candidate to be displayed in dmenu.
        awk '/^ *xrandr/{
            print $0" --dryrun"
            exit
        }' $SCRIPT |
        /bin/sh >/dev/null 2>/dev/null &&
        echo $SCRIPT
    done | # At this point we have the list of possible options.
    dmenu -l 50 -fn 'Mono:pixelsize=20' $@ |
    sed "s|^|$ARANDR_DIR\/|" # Make an absolute path.
)"

# I could just pipe the $SELECTED_SCRIPT to shell but I did not...
${SHELL:-"/bin/sh"} $SELECTED_SCRIPT
# ... because you might want to do something else with it, such as: 

# ... map the touchscreen so the cursor ends up where you touch.
# xinput map-to-output 'ELAN Touchscreen' eDP1

# ... create a symlink to the last used config so you can autoload on reboot.
ln --force --symbolic $SELECTED_SCRIPT last_used

# ... or simply echo
echo $SELECTED_SCRIPT
